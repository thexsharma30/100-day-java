//Wap in java to implement linkedkist and few add operations.
public class linkedlist {
    public static class Node{
        int data;
        Node next;
        public Node(int data){
            this.data=data;
            this.next=null;
        }

    }
    public static Node head;
    public static Node tail;
    public static int size;


    public void addFirst(int data){
         //Step1= Create new Node
        Node newNode = new Node(data);
        size++;
        if(head==null)
        {
            head=tail=newNode;
            return;
        
        }
        //Step2- newNode next=head
        newNode.next = head;
        //Step3- head = newNode
        head=newNode;
    }
    public void addLast(int data)
    {
        Node newNode = new Node(data);
        size++;
        if(head==null)
        {
            head=tail=newNode;
            return;
        }
        tail.next=newNode;
        tail= newNode;
    }
    public void addinmid( int index,int data )
    {
        Node newNode= new Node(data);
        size++;
        Node temp=head;
        int i=0;
        while(i<index-1)
        {
            temp=temp.next;
            i++;
        }
        newNode.next=temp.next;
        temp.next=newNode;

    }
     public void print(){
        Node temp=head;
        /*if(temp==null){
           /System.out.println("Empty");
            return;
        }*/
        while(temp!=null){
            System.out.print(temp.data+"->");
            temp=temp.next;
        }
        System.out.println("null");
    }
    public static void main (String args[]){
        linkedlist l=new linkedlist();
        l.addFirst(2);
        l.addFirst(1);
        l.addLast(3);
        l.addLast(4);
        l.addinmid(2,10);
        l.print();
       System.out.println("Size="+l.size);
        l.removefirst();
        l.print(); 
        System.out.println("Size="+l.size);
        l.removelast();
        l.print();
        System.out.println(l.search(10));
        System.out.println(l.search(6));
        l.reverse();
        l.print();
    }
      
}
 
