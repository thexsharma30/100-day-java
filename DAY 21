/*Given an array, , of  real number strings, sort them in descending order â€” but wait, there's more! Each number must be printed in the exact same format as it was read from stdin, meaning that  is printed as , and  is printed as . If two numbers represent numerically equivalent values (e.g., ), then they must be listed in the same order as they were received as input).

Complete the code in the unlocked section of the editor below. You must rearrange array 's elements according to the instructions above.
Input Format
The first line consists of a single integer, , denoting the number of integer strings.
Each line  of the  subsequent lines contains a real number denoting the value of .
Constraints
Each  has at most  digits.
Output Format
Locked stub code in the editor will print the contents of array  to stdout. You are only responsible for reordering the array's elements.*/

import java.io.*;
import java.util.*;
import java.math.BigDecimal;

public class Solution {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        String[] a = new String[n];
        
        for (int i = 0; i < n; i++) {
            a[i] = sc.next();
        }
        
        // Sort the array in descending order using BigDecimal
        Arrays.sort(a, (s1, s2) -> new BigDecimal(s2).compareTo(new BigDecimal(s1)));
        
        for (int i = 0; i < n; i++) {
            System.out.println(a[i]);
        }
    }
}
